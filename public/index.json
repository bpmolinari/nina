
[{"content":" Introduction # This records the resources that I discovered and used in getting a website constructed and deployed. The project was motivated by acquiring an nice domain name.\nMy starting point was that I was computer literate. I have experience in running a home Ubuntu environment. I have a strong preference for the markup Latex ecosystem, rather than the WYSIWYG Microsoft Word ecosystem. I have written moderate size programs (in a teaching environment) in a range a languages (including FORTRAN, Simula-67, Pascal, Modula, Miranda, Perl, Python).\nI realised I had NOT maintained or developed any websites. I was familiar with the words (HTML, CSS, and so on) but had not worked with them.\nAt The Browser # A web-page, downloaded from a server, is a collection of text files consisting of\nHTML (Hypertext Markup Language) resources (content in a markup format) CSS (Cascading Style Sheets) resources (specifying layout attributes of the content) JS (JavaScript) programs The browser parses the HTML resources and constructs anDOM tree (Document Object Model). The tree is then rendered to the browser window, according to the CSS resources. The JS resources can access and modify any of the objects in the DOM tree, thus modifying the displayed page.\nA convenient resource (among many) is the World Wide Web Schools site. This provides both tutorial as well as reference documentation. Mozilla also provides a starting point for complete beginners.\nA modern browser is a complex software system. The code-base for Firefox is 21 million lines. The Firefox Developer Tools provide a detailed debug interface into the working browser.\nCSS and JavaScript Resources # In principle a complete website can be written ab initio and placed on the server. In practice a great deal of the CSS and JavaScript resources for a website can be obtained from libraries. Typically all the resources needed for a website are collected in one place. The collection is often referred to (rather imprecisely) as a framework.\nCSS frameworks include the following:\nW3.CSS Tailwind JavaScript frameworks include the following\nW3.JS Combined frameworks include the following\nBootstrap Simple Websites # Given a CSS framework and a JavaScript framework it is a short step to provide a complete website for a simple use-case. Such a website is often referred to (somewhat imprecisely) as a theme or a template.\nA theme can be downloaded as a collection of resources. It can naively customised by searching the HTML resources for text strings that are evident in the web-page, and changing them to new values. The user then has a rather fragile website, to their requirements.\nThe World Wide Web School environment provides some templates here. The Bootstrap environment provides some themes here. There is a substantial ecosystem to support customisation and maintenance. These themes are typically premium.\nAt The Server: LAMP and WordPress # The Wikipedia article is as good a starting place as any.\nA raw web-site can simply use the first two layers of the stack, namely, Linux and Apache. The LAMP approach adopts content management using a database (MySQL) and a scripting language (originally PHP) to extract the content from the database and to then construct the web-site resources. The web-site construction can of course utilise CSS and JavaScript library resources as just discussed above.\nTo accommodate the situation where the content is dynamic, the web-site resources are generated anew for each user visit.\nThe generation of the web-site resources from the content can be automated by a web-site generator system, the dominant example being WordPress. A complete starter web-site can be obtained by loading a theme (there are thousands of free and premium themes available). The designer is provided with an interface where content can be created and maintained using a WYSIWYG editor. The publisher sees the content as it will appear in the browser window. The content is maintained in a MySQL database. In the best case the entire HTML/CSS/JavaScript world is hidden from the designer.\nAt The Server: JAM and Hugo # JAMstack is a software pattern for web-site development and architecture. In brief:\nThere is no server-side processing. The client simply provides static web-site resources generated from content in Markup form (together with CSS and JS resources primarily from libraries)\nClient-side interactions (such as form submission) are directed to the API economy of specialised service providers, through the execution of JS scripts on the client browser.\nThis has positive security and efficiency outcomes. It allows simple scaling via Content Delivery Networks. A downside is that the pattern applies to many, but not to all, usecases.\nThis approach is automated by a static site generator, which processes the content (together with CSS and JS resources) into the web-site files (which are then uploaded to the server. As before, the notion of a theme means that a simple complete web-site is directly available. Content is typically managed by simple version control such as git. An example site generator is Hugo, though there are 354 other competitors listed on the Jamstack site. In contrast to WordPress, the Hugo processor does not reside on the server.\nMy Choice of Technology # I ran some experiments with WordPress, but found it was not a good fit for me. I was uncomfortable with the WYSIWYG editor, and found that the basic themes all looked like blogs. I did not want a simple blog website.\nIn the JAMstack ecosystem I ran some experiments with Jeckyl and with Hugo, and settled on the latter. Reasons included\nit is a standalone executable (written in Go)\nit was actively maintained, with a good (and improving) documantation.\n","date":"2 July 2022","externalUrl":null,"permalink":"/techdocs/webtech/","section":"Docs","summary":"Introduction # This records the resources that I discovered and used in getting a website constructed and deployed.","title":"My journey with Web technology","type":"techdocs"},{"content":" Overview # wibble The Hugo processor is a stand-alone application written in Go, and is downloaded as an executable. It processes a site specification into a website.\nThe site specification consists of\nconfiguration files (in YAML or TOML format)\nGo template files (in augmented HTML format)\ncontent files (in Markdown format)\nThe website consists, as we have seen, of HTML, CSS and JS resources. In general terms, the HTML resources are specified by the template and content files. In general terms, the CSS and JS resources (if derived from libraries) are specified by the configuration files.\nThere are many themes available that provide a simple complete website. This can be customised by the user by modifying text fragments in the configuration and content files, and extended by the provision of additional content files.\nIn the simplest case, the Hugo system is a black box and the templating is a black art. The naive user can get away without an understanding of either. Until suddenly they can\u0026rsquo;t.\nSyntax of the site specification # We will consider the simplest case, that of no theme and no assets such as image files.\nConfiguration # The basic configuration file is hugo.toml. Additionally, a directory /config can be used to place files of the format xxx.toml.\nContent # The directory /content contains a hierarchy of subdeictories and Markdown files, in the format xxx.md.\nTemplate # Template files (which have the format xxx.html) are placed in the directory /layout. In general this directory can have sub-directories that match the sub-directories in /content, which allows templates to be associated with content files in a sub-directory of the same name. Generally this fine association is not needed, and fallback layout files are placed in the /layout/_default directory.\nSyntax of the Website # The generated website is placed in the /public directory. The internal sub-directory structure matches that of the /content sub-directory.\nHugo Semantics # The approach we take to specifying what the Hugo system does is to consider the Hugo abstract machine. That is, we describe the internal data structures that are created and modified during processing, and how this data is processed into into the system output.\nThe HAM has an object store consisting of\nA hugo object. The method .hugo.version returns the version number of the system. The range of methods is specified here.\nA site object. The method .Site.Title returns the site title (specified by the configuration data). The range of methods is specified here.\nA tree of Page objects. The internal data of a Page object contains the text of a Makdown file. The method .Page.Contents returns the this text, less the front matter, rendered into HTML. The range of methods is specified here.\nThe behaviour of the HAM involves the following steps.\nThe customisation input files are read, and processed into the Site object. This data is accessed during subsequent processing.\nThe content files are processed into an equivalent tree structure of Page objects. The front matter is processed into the internal data, to be accessed during subsequent processing.\nThe Page tree is now traversed. Each Page object is processed, causing a corresponding HTML file to be written to the website file structure.\nGiven a Page object (equivalently, a content file) there is a systematic process of determining a template file (specified here). A Go template has to applied to a context. Here the context is clearly the Page object being processed. The semantics of the templating language now determines what happens. The output can involve\nexplicit HTML specified in the template,\nrendered content of the page, given by .Page.Contents, and\ndata from the Page object and the Site object (set bu front-matter and configuration processing respectively.\nIt is important to realise that in processing a Page P, a template is not restricted to P alone. Methods on P allow other page objects to be referenced (and their content to be selectively mined). All pages in the tree could be automatically built into a home-page menu, for example.\nThe traversal order of the Page tree is not specified, and no particular order can be relied on.\n","date":"8 July 2024","externalUrl":null,"permalink":"/techdocs/hugoarch/","section":"Docs","summary":"Overview # wibble The Hugo processor is a stand-alone application written in Go, and is downloaded as an executable.","title":"The Hugo System: How does it work","type":"techdocs"},{"content":" Overview # This note outlines how the Blowfish theme works, with an aim to showing how some elements of the theme can be modified.\nBase template mechanism # There is a single baseof.html file, in layouts/_default. This includes the declarations\n\u0026lt;body\u0026gt; {{ partial \u0026#34;partials/header/basic.html\u0026#34; . }} \u0026lt;div\u0026gt; \u0026lt;main id=\u0026#34;main-content\u0026#34; class=\u0026#34;grow\u0026#34;\u0026gt; {{ block \u0026#34;main\u0026#34; . }}{{ end }} \u0026lt;/main\u0026gt; {{- partial \u0026#34;footer.html\u0026#34; . -}} \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; That is, the header and the footer are common to all pages, and are provided by partial templates. The body content of each page is provided by the block mechanism. The template for each page kind will thus have the following structure:\n{{ define \u0026#34;main\u0026#34; }} template code {{ end }} Home Page # The content root directory content shows that the home page markup is provided by _index.md. All layout is provided by the theme, in the directory themes/blowfish/layouts. The matching template is index.html.\nThe template index.html can be quoted in full:\n{{ define \u0026#34;main\u0026#34; }} {{ $partial := print \u0026#34;partials/home/\u0026#34; .Site.Params.homepage.layout \u0026#34;.html\u0026#34; }} {{ if templates.Exists $partial }} {{ partial $partial . }} {{ else }} {{ partial \u0026#34;partials/home/profile.html\u0026#34; . }} {{ end }} {{ end }} If the parameter homepage.layout is defined in the Hugo configuration files, then a filename is constructed and this is used as a template. Otherwise a default template is used.\nContent Style # In the Tailwind mechanism the stying is provided by adding the following classes to the body tag.\n\u0026lt;body class=\u0026#34;flex flex-col h-screen px-6 m-auto text-lg leading-7 max-w-7xl bg-neutral text-neutral-900 dark:bg-neutral-800 dark:text-neutral sm:px-14 md:px-24 lg:px-32 scrollbar-thin scrollbar-track-neutral-200 scrollbar-thumb-neutral-400 dark:scrollbar-track-neutral-800 dark:scrollbar-thumb-neutral-600\u0026#34;\u0026gt; Some of the relevant tags are:\nCSS and JS Assets # The theme CSS declarations are to be found in themes/blowfish/assets/css. The line\n{{- partial \u0026#34;head.html\u0026#34; . -}} in baseof.html causes the the various files in this sub-directory to be concatenated (order is significant) and written to a file public/css/xxx.css. If there is a user-provided file assets/css/custom.css then this is included as the last component. Finally, the line\n\u0026lt;link type=\u0026#34;text/css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/css/xxx.css\u0026#34; is written in the generated html file, to provide the appropriate linkage.\nRather than the entire Tailwind library being included in xxx.css, the Tailwind system provides a utility that scans the website content and layout files to determine the subset of the library that is in fact used. For the theme as supplied, this subset is provided in the file assets/css/compiled/main.sss.\nThe Blowfish documentation provides a discussion of what might be included in custom.css, and how to regenerate compiled/main.css if the use of tailwind classes is modified.\nSimilarly, the theme JS functions are to be found in the directory themes/blowfish/assets/js. The same partial template causes these files to be concatenated and written to a file public/js/xxx.js. The line\n\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;/js/xxx.js\u0026#34; is written in the generated html file, to provide the appropriate linkage.\n","date":"7 September 2024","externalUrl":null,"permalink":"/techdocs/blowfish/","section":"Docs","summary":"Overview # This note outlines how the Blowfish theme works, with an aim to showing how some elements of the theme can be modified.","title":"Notes on Blowfish","type":"techdocs"},{"content":" Site Documentation # Content architecture # specify sections\nStyle # specify configuration\nHome Page # In this description, all filenames are relative to the content directory.\nThe direct content is provided by the _index.md file.\nThe direct templates are provided by\nthe layouts/_index.html file, and\nthe layouts/_default/baseof.htmlfiles\nThe output is the index.html file in the public directory.\nDocs directory # This is a classic section (leaf bundle). The directory contains a _index.md file and a number of xxx.md files, each providing the markup for a particular topic.\nThe _index.md file is used to generate the public/docs/index.html file. The templates layouts/_default/list.html and baseof.html are used.\nEach topic file xxx.md is processed into an xxx subdirstory, which contains an index.html file. That is generated from the content file xxx.hlml and the template file layouts/_default/single.html (as well as the baseof.html file.\nFamily directory # This is a full section, and has the complexity of a website in its own right.\nThe page content is provided by _index.html\nThere are page bundles provided by a number of directroies, each coresponding to a ancestor family.\nFinally there is a resources directry guides, which details a number of aspects of collecting this information. Again, it is structured as an intellectual journey from naievity through to reasobale competence. What I would have liked to have read.\n","date":"25 July 2024","externalUrl":null,"permalink":"/techdocs/site/","section":"Docs","summary":"Site Documentation # Content architecture # specify sections","title":"Site documentation","type":"techdocs"},{"content":" Overview # This note outlines how the example site for HugoPlate works, and the Hugoplate theme. It identifies how the example site can be modified to a user site. It is perhaps useful for a reader who is attempting to use a Hugo example site/theme for the first time\nHome Page # The content root directory /content/english shows that the markup home page is provided by -index.md. All layout is provided by the theme, in the directory /themes/hugoplate/layouts. The matching template is index.html, and as there is a template baseof.html in the _default directory that is subsequently applied.\nSpecifically, the templates are applied to the Page object generated from the file _index.md. That file consists only of front-matter, defining banner and features.\nThe template index.html specifies three pieces of the home page.\nA banner piece. It does this by accessing the components of .Params.banner, which were set by the front-matter of _index.md.\na features piece. It does this in a analogous fashion, by accessing .Params.features.\nA testimonials piece. It does this by\n{{ with site.GetPage \u0026#34;sections/testimonial\u0026#34; }} This uses the GetPage method on the site object, to reference the Page object associated with the testimonial.md content file.\nIn each case, the detailed HTML is specified. Finally, no output is actually written. Rather, the entire specification is defined to be a template named main.\nThe template baseof.html is now applied to the home Page object. It generates a production-quality web-page. In visual terms it specifies a header and a footer (which will be common to all web-pages in the site. The content of the page is generated by applying the main template at the appropriate place. This standard device is used to economically generate all web-pages.\nabout directory # The markup file is _index.md while the template file is provided by the theme, namely layouts/about/list.html.\nNeed to explain how the matching directory is created in /public and how file index.html is created.\nThe markup file involves some front-matter and some straight text.\nThe template can be shown in full:\n{{ define \u0026#34;main\u0026#34; }} \u0026lt;section class=\u0026#34;section-sm\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row justify-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;md:col-10 lg:col-7 text-center\u0026#34;\u0026gt; {{ partial \u0026#34;image\u0026#34; (dict \u0026#34;Src\u0026#34; .Params.image \u0026#34;Context\u0026#34; .Page \u0026#34;Alt\u0026#34; .Title \u0026#34;Class\u0026#34; \u0026#34;mx-auto mb-6\u0026#34; \u0026#34;Size\u0026#34; \u0026#34;200x200\u0026#34;) }} \u0026lt;h2 class=\u0026#34;h3 mb-6\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;content\u0026#34;\u0026gt;{{ .Content }}\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; {{ end }} This templates writes out the specification of an image, and a heading (both derived from the front-matter). It then writes the text of the markup file. This specification is defined to main, rather than actually being carried out.\nThe processing then follows exactly as for the home-page. The template file baseof.html is applied to the page object. The same header and footer is generated, but now with a different middle section corresponding to main.\nauthors directory # _index.md has the same effect as the about directory.\nEach of the three content files are processed by\ncreating a sub-directory generating an index.html file by applying the template xxx to the content file. Categories and Tags # Explain\nhow each blog post is labelled in the front-matter with category terms and tag terms. This is not restricted to blog posts\nhow Hugo automatically creates directories /categories and /tags, and populates them\nthese can then be made available in menus etc by templating\nblog directory # The processing of index.md using the template layouts/blog/list.html is more complicated.\n\u0026lt;section class=\u0026#34;section\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row gx-5\u0026#34;\u0026gt; \u0026lt;!-- blog posts --\u0026gt; \u0026lt;div class=\u0026#34;lg:col-8\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; {{ $paginator:= .Paginate .RegularPages }} {{ range $paginator.Pages }} \u0026lt;div class=\u0026#34;md:col-6 mb-14\u0026#34;\u0026gt; {{ partial \u0026#34;components/blog-card\u0026#34; . }} \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/div\u0026gt; {{ partial \u0026#34;components/pagination.html\u0026#34; . }} \u0026lt;/div\u0026gt; \u0026lt;!-- sidebar --\u0026gt; \u0026lt;div class=\u0026#34;lg:col-4\u0026#34;\u0026gt; \u0026lt;!-- widget --\u0026gt; {{ $widget:= site.Params.widgets.sidebar }} {{ partialCached \u0026#34;widgets/widget-wrapper\u0026#34; ( dict \u0026#34;Widgets\u0026#34; $widget \u0026#34;Scope\u0026#34; . ) }} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; There is a row of two components.\nThe first is a summary of all the blog posts. This is done by calling the Paginate operator on the collection of blog page objects. This breaks them into groups of 2 (set in xxx), creates a directory page and writes the rendered objects into sub-directories 1, 2. It writes the first group onto the page. It then puts a menu underneath.\nThe second component is a sidebar, defined in xx\n[widgets] sidebar = [\u0026#34;categories\u0026#34;, \u0026#34;tags\u0026#34;] This is processed by a widget template.\nThe processing of the content files is standard. A directory is created for each blog page, and the rendered page written to index.html in that directory.\npages directory # Contrary to current practise, this contains neither a _index.md or a index.md file. It is a page bundle, because it is a first-level directory. Hence it is processed by a list template (in _default).\nThe two content files are processed in a strange way. Directories are created at level one, rather than as subdirecries of /page, and the content rendered into index.html. Maybe it is a convention remaining from an early version of Hugo.\nsections directory # This is similar to /pages. In this case the content files are not rendered, because of a front-matter specification.\n# don\u0026#39;t create a separate page _build: render: \u0026#34;never\u0026#34; CSS Styling # The homepage index.html contains the fragment\n\u0026lt;link href=\u0026#34;/css/style.css\u0026#34; integrity=\u0026#34;\u0026#34; rel=\u0026#34;stylesheet\u0026#34; /\u0026gt; This specifies that the external document referenced by the URL is a stylesheet for the homepage. The question is: how does the HugoPlate template generate the contents of the file style.css?\nThe work is done by the template style.html (provided by the theme in partials/essentials). The key statements are\n{{ $styles := slice }} {{ $styles = $styles | append (resources.Get \u0026#34;scss/main.scss\u0026#34; | toCSS) }} {{ $styles = $styles | resources.Concat \u0026#34;css/style.css\u0026#34; }} {{ $styles = $styles | resources.PostCSS }} \u0026lt;link href=\u0026#34;{{ $styles.RelPermalink }}\u0026#34; integrity=\u0026#34;{{ $styles.Data.Integrity }}\u0026#34; rel=\u0026#34;stylesheet\u0026#34; /\u0026gt; Informally each step does the following:\n$styles is an empty slice (list).\nThe file main.sccs is read and is appended to the list. Each element of the list is transpiled to CSS. The file main imports five other scss files in the theme, goes through the Hugo modules that have been imported (in xxx) and imports their scss components (if any) and then imports the contents of assets/scss/custom.scss. This allows customisation if the example site is developed.\nThe elements of the list are concatenated and stored in resources, with the indicated target path.\nstyles is then processed by plugins (see postcss.config.js). The styling so far has made reference to Tailwind classes. The processing arranges that only the classes actually referenced are physically imported.\nThe method RelPermalink has the side effect of writing the contents of the variable to the indicated file in the public directory.\nMaking it all work is an impressive demonstration of theme coding and Hugo processing.\n","date":"4 April 2022","externalUrl":null,"permalink":"/techdocs/hugoplate/","section":"Docs","summary":"Overview # This note outlines how the example site for HugoPlate works, and the Hugoplate theme.","title":"Notes on HugoPlate","type":"techdocs"},{"content":"","date":"7 September 2024","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"This website serves several purposes.\nIt records the migration of a small section of the Molinari family from northern province of Sondrio in Italy to the state of Western Australia.\nIt records the braoder family ties of the website manager\nIt records things that might be of some interest to others\n","date":"7 September 2024","externalUrl":null,"permalink":"/","section":"homepage ","summary":"This website serves several purposes.","title":"homepage ","type":"page"},{"content":"","date":"7 September 2024","externalUrl":null,"permalink":"/categories/hugo/","section":"Categories","summary":"","title":"Hugo","type":"categories"},{"content":"","date":"7 September 2024","externalUrl":null,"permalink":"/categories/theme/","section":"Categories","summary":"","title":"Theme","type":"categories"},{"content":"hello sailor\n","date":"26 July 2024","externalUrl":null,"permalink":"/techdocs/","section":"Docs","summary":"hello sailor","title":"Docs","type":"techdocs"},{"content":" Introduction # My paternal grandfather is Giovan\u0026rsquo; Domenico Molinari (1882-1959). He was born in Tirano, Sondrio, Italy and emigrated to Perth, Western Australia in 1902. Three siblings (two brothers and a sister) migrated from Tirano, in Sondrio, to Perth in the first 15 years of the twentieth century. What was the context of them leaving at that time, and why Australia?\nThe family recorded history and oral history is rather weak. The sister died early (in 1941). The younger brother went back to Tirano in 1975. They didn\u0026rsquo;t much write to one another, or at least didn\u0026rsquo;t reply to letters.\nThe Tirano Context # This is provided by\nJacqueline Templeton, \u0026ldquo;From the Mountains to the Bush: Italian migrants write home from Australia, 1860-1962\u0026rdquo;, University of Western Australia Press, 2003.\nThis is a study of migration from the area of Italy. It constituted the great majority of migtarion in the 1880-1914 time. The area was agricultural and poor. The population was small landholders and poor. Land was in short supply. There was a tradition of younger sons working outside the area either seasonally or for a number of years. Money was sent back regularly, of accumulated until return. This happened in Europe (Switzerland, France) where unskilled farm labouring jobs were available. To some extent this system was transferred to Australia.\nThe author has found access to a number of letters from the (single) sojourners in Austral back to Tirano. Many stories tell of isolation and loneliness. They tended to work together on small contacting arrangements, and the opportunities of interaction with the broader community were limited.\nA broader story is told in the book \u0026ldquo;Sojourners\u0026rdquo;, for the Chinese migration to Australia in the nineteenth century.\nThere is a considerable amount of Italian-Australian studies now available. The journal Italian Historical Society has a number of articles, and in fact lead me to find the Sondrio records.\nBernardo Molinari (1842-1918) # Look at family tree. molinari\nUnable to display PDF file. Download instead.\nBernardo (1842-1918) was married FOUR times. Wives and children:\nMaria Beccaria (haven\u0026rsquo;t found the marriage registro - records started in 1866) Domenico 1868 lived 6 days Bernardo 1869 lived 2 days unnamed girl 17 Dec 1871 \u0026ldquo;non e\u0026rsquo; vivo\u0026rdquo; Maria died 24 December 1871 in Tirano (obviously from complications), aged 30\nMarta Tudori (married 1873, age 25) Maria Domenica 24 Nov 1874 lived 6 days Domenica Marta 27 Feb 1876 lived 2 days Marta died 20 Nov 1876 in Teglio, aged 38)\nMaria Reghenzani (married 01 Mar 1878, age 33) Domenica 18 Sep 1878 died 2 Sep 1879 Maria Domenica 23 Feb 1880 (married Giacom\u0026rsquo; Pianta) Giovan Domenico 16 Jan 1882 (grandfather Dom - note the name) Bernardo 3 Sep 1883 died 25 Apr 1886 Rose Palmira 25 Apr 1885 Died 3 Sep 1886 Bernardo 16 Nov 1886 \u0026ldquo;lived 10 minutes\u0026rdquo; Bernardo 26 Nov 1887 (Uncle Barney) Maria died 22 Oct 1902 in Tirano, aged 56\nMaria Caterina Rossi (married 6 Mar 1904, age 36) No children and I can\u0026rsquo;t see when she died. Bernardo was 62 at this stage.\nNone of his wives came from Tirano - God only knows how he found them and persuaded them to marry him.\nHe seems to have spent the time 1888-1901 (or thereabouts) in Australia.\nDomenico Molinari of Madonna di Tirano emigrated to Australia in 1888, leaving his wife and three children. The younger of two brothers, Bernardo, was 2 when his father left but nearly 14 when he returned twelve years later and immediately expected obedience. To Bernardo, his father was a usurper whose authority he refused to recognise and, as soon as he was able, he left permanently for Australia, following his brother who had already gone, perhaps for the same reasons. (Templeton, page 93, who attributes the information to a conversation with Bernardo\u0026rsquo;s daughter Roma).\nThe travel date is probably correct. There is a Bernardo Molinari (\u0026ldquo;workman, aged 32) on the passenger list of the Salier which arrived in Melbourne on 03 August 1888. The age given is wrong (he was 46) but there seems to have been no requirements to carry an identity document which could be checked. The baby Bernardo was not yet 1.\nHe is still away in April 1901. On his daughter\u0026rsquo;s marriage certificate (in Tirano) his address is recorded as \u0026ldquo;ignota in Australia\u0026rdquo; (unknown in Australia).\nHe was back in Tirano when Maria died in October 1902.\nNo details of his stay in Australia have been found and no record of his return trip to Italy. There is a vague family story that this was his second trip to Australia. This can only be possible if he was back in Tirano by, say, 1867.\nMaria Reghenzani (1845-1902) # Look at family tree. reghenzani\nUnable to display PDF file. Download instead.\nMaria was married THREE times. Husbands and children:\nGiovanni D\u0026rsquo;Abbondi (haven\u0026rsquo;t found the registro - records started in 1866) No children in the period of the records. Giovanni died in 1870 aged 47.\nDomenico Ferrari (married 1872, he was 51) Maria Giovanna 20 May 1873, Married Giovanni Molinari Caterina 25 Aug 1874, Married Andrea Ferrari Domenico died 1 Feb 1875 aged 54.\nBernardo Molinari (see above) Life was clearly cheap in Tirano. By my reckoning Bernardo had 12 children, of whom only three reached maturity. Maria had 9 children, of whom five reached maturity.\nThere were a large number of Molinaris and Piantas and Ferraris in Tirano, but almost none in the next communes Villa di Tirano and Teglio. Clearly it was a tribal way of life.\nThe Migrant Generation # The three Molinari siblings migrated to Perth in close succession: Dom in 1900, Maria Domenina in 1907 and Bernardo in 1908. They left two half-sisters in Tirano (from their mother\u0026rsquo;s earlier marriage). The second sister, Caterina Ferrari, had three children, of whom two also migrated to Perth: Eliza Ferrari in 1923 and Battista Del Torre in 1924. The first sister, Maria Giovanna Ferrari, stayed in Tirano and her family were the rather indistinct \u0026ldquo;Tirano relatives\u0026rdquo; of my chidhood. She had married Giovanni Molinari, so these relatives bore the Molinari surname (but from a different family).\nDomenico Molinari # For the first time, we have a photograph. This is Domenico at his wedding in 1911, aged 29.\nHe migrated to Perth in 1900. Married in 1911. Then owned a hotel in Day Dawn, in 1918.\nThen blacksmith in Cue. Gold possession. Retirement. My memories.\nDomenica Pianta (nee Molinari) # Married Giacomo Pianta in Tirano. He moved to Perth in 1902, leaving Domenica and son behind. Do not have a photo of Domenica, but one of the brothers in law.\nSad story. Did not come out until 19xx. They run a diary farm. Husband was seriuosly injured and committed to a nursing home. Commits suicide in 1941.\nBernardo Molinari # Comes out in 1908. Works in New Norcia for eight years. Business man. Somewhat of an unofficial consul, facilitating Italian immigrants.\nMarries the daughter of his half-sister but she dies after three years. Marries again.\nhas daughter in 1930.\nTrip to Tirano in 1975. House vandalised after six months. Stays in Tirano.\nThe next generation # Mary Meotti # Barney Molinari # Arthur Molinari # James Molinari # Helen Molinari # Jim Pianta # Roma Molinari # ","date":"25 July 2024","externalUrl":null,"permalink":"/family/molinari/","section":"Family","summary":"Introduction # My paternal grandfather is Giovan\u0026rsquo; Domenico Molinari (1882-1959).","title":"Molinari","type":"family"},{"content":" Overview # ","date":"25 July 2024","externalUrl":null,"permalink":"/family/overview/","section":"Family","summary":" Overview # ","title":"Overview","type":"family"},{"content":"This is the standard story of immigrants. My direct ancestors came from Italy, England, and Ireland. It even includes convicts. My wife\u0026rsquo;s ancestors came from Ireland, England and Switzerland.\nThis has all been collected into a site on the commercial MyHeritage site. While this is complete, it is somewhat difficult to traverse and is not flexible enough to tell stories.\nThis page\ntells the stories of my ancestors\nMolinari Dall\u0026rsquo;Acqua Atkins Connole tells the stories of my wife\u0026rsquo;s ancestors\nO\u0026rsquo;Hare Raselli O\u0026rsquo;Hanlon McMahon It also describes a range of resources.\n","date":"25 July 2024","externalUrl":null,"permalink":"/family/","section":"Family","summary":"This is the standard story of immigrants.","title":"Family","type":"family"},{"content":"","date":"8 July 2024","externalUrl":null,"permalink":"/tags/software/","section":"Tags","summary":"","title":"Software","type":"tags"},{"content":"","date":"8 July 2024","externalUrl":null,"permalink":"/categories/software/","section":"Categories","summary":"","title":"Software","type":"categories"},{"content":"","date":"8 July 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"8 July 2024","externalUrl":null,"permalink":"/tags/tailwind/","section":"Tags","summary":"","title":"Tailwind","type":"tags"},{"content":"","date":"2 July 2022","externalUrl":null,"permalink":"/categories/architecture/","section":"Categories","summary":"","title":"Architecture","type":"categories"},{"content":"","date":"2 July 2022","externalUrl":null,"permalink":"/tags/silicon/","section":"Tags","summary":"","title":"Silicon","type":"tags"},{"content":"","date":"2 July 2022","externalUrl":null,"permalink":"/tags/technology/","section":"Tags","summary":"","title":"Technology","type":"tags"},{"content":"","date":"4 April 2022","externalUrl":null,"permalink":"/categories/data/","section":"Categories","summary":"","title":"Data","type":"categories"},{"content":"","date":"4 April 2022","externalUrl":null,"permalink":"/categories/technology/","section":"Categories","summary":"","title":"Technology","type":"categories"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":" Introduction # My paternal grandmother is Giacinta Dall\u0026rsquo;Acqua(1983-1973). She was born in Selva di Cadore, Belluno, Italy and emigrated to Perth, Western Australia in 1911. When I was growing up we seemed to have no family stories as to her background, and I only have one photo of her.\nIn 2024 I found the Italian state births, deaths and marriages records for the Belluno province online (via Ancestry.com). Working through those records has allowed us to fill in much of her story.\nThe Selva di Cadore Context # Strictly, Selva di Cadore is a small commune in the province of Belluno, in the north=east of Italy, against the border with Austria. It is also the name of the main town. The commune had a population of about 1000 when my grandmother lived there - it is now half that.\nCadore is a identified region in the Dolomites. before 1902 the commune seems to have benn named Selva Bellunese, and before that simply Selva.\nVal fiorentina\nGiacinta Dall\u0026rsquo;Acqua(1983-1973) # Unable to display PDF file. Download instead.\nGiacinta was the second of six children born to Lorenzo Dall\u0026rsquo;Acqua and Poalina Torre.\nname occupation meaning Vincenzo agricoltore farmer Maria Zuliani Lorenzo agricoltore farmer Paolina Torre villica tenant farmer Romano legnajuolo woodcutter Maria Zanicolo villica tenant farmer Manueto offellieri confectioner Gettrude Buogo contadina farmer Riccardo bracciante farm labourer Carolina Scardozan casalinga housewife The distinction between agricoltore, villico, and contadino somewhat escapes me at the moment.\nGiacinta and her brother Riccardo arrived at Port Fremantle on 10 March 1911, on the North German Lloyd ship Barbarossa. She married Dominico Molinari on 25 September 1911, in St Mary\u0026rsquo;s Cathedral in the centre of Perth. Presumably Dom had made some money in his ten years in WA.\nRiccardo is on the passenger list for the North German Lloyd ship Bremen leaving Fremantle on xx, bound for Sydney. Whether he stayed in Sydney, or went directly back to Italy is not clear.\nThe Cousin: Gerardo Callegari # It is convenient to show the family tree for Giacinta\u0026rsquo;s grandfather, Giacomo Torre.\nUnable to display PDF file. Download instead.\nClearly, Giacinta and Gerardo Callegari(1886-1937) were first cousins. Gerado and his wife Oliva Dell\u0026rsquo;Andrea emigrated to WA, arriving at Port Fremantle on the North German Lloyd ship Bremen on 08 November 1908. Presumably, their presence in WA had a considerable bearing on Giacinta\u0026rsquo;s decision to emigrate some two years later.\nGerardo and Oliva had a large family - I have shown nine children in the family tree. As a child I was aware of several of the that generation, but did not appreciate that they were genuine second cousins from Selva di Cadore.\n","externalUrl":null,"permalink":"/family/dallacqua/","section":"Family","summary":"Introduction # My paternal grandmother is Giacinta Dall\u0026rsquo;Acqua(1983-1973).","title":"DallAcqua","type":"family"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]